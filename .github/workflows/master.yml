name: Check build after pull request on master

on: 
  push:
    branches:
      - master

jobs:
  masterbuilder:
    runs-on: self-hosted
    container:
      image: obspher/ubuntu-dev:1.0.0
      env:
        CONAN_USER_HOME: /home/conan
      volumes:
        - /home/obs-vision/github/conan:/home/conan
      credentials:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Create build directory
        run: mkdir build

      - name: Install conan dependencies
        working-directory: ./build
        run: conan install .. -pr release --build missing

      - name: Build package
        working-directory: ./build
        run: conan build ..

      - name: Static analysis
        run:  cppcheck src/ -Iinclude/ --error-exitcode=1 --enable=all --std=c++20 --inline-suppr

      - name: Dynamic analysis on unit tests
        run: valgrind --leak-check=full --show-reachable=yes --trace-children=yes --error-exitcode=33 ./build/bin/unit_test

      - name: Get conan package name
        id: conan_infos
        run: |
          echo "::set-output name=name::$(conan inspect . --raw name)\n"
          echo "::set-output name=version::$(conan inspect . --raw version)\n"

      - name: Export conan package
        run: conan export-pkg . -bf ./build -pr release -f

      - name: Upload on conan server
        run: conan upload ${{steps.conan_infos.outputs.name}}/${{steps.conan_infos.outputs.version}}@_/_ -r conanobspher

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.conan_infos.outputs.version}}
          release_name: Release ${{steps.conan_infos.outputs.version}}
          body: Automatic release by ${{ github.actionÂ }}
          draft: false
          prerelease: false